package com.example.tarefa;

import java.sql.*;

public class ConexaoBD {

    private static ConexaoBD instancia = null;
    private Connection conexao = null;
    
    
    private static final String DB_DRIVER = "org.postgresql.Driver";
    
    // Configura√ß√µes usando vari√°veis de ambiente (para Docker) com fallback para desenvolvimento local
    private static final String DB_URL = System.getenv("DATABASE_URL") != null 
        ? System.getenv("DATABASE_URL") 
        : "jdbc:postgresql://localhost:5432/tarefa";
    
    private static final String DB_USER = System.getenv("DATABASE_USERNAME") != null 
        ? System.getenv("DATABASE_USERNAME") 
        : "postgres";
    
    private static final String DB_SENHA = System.getenv("DATABASE_PASSWORD") != null 
        ? System.getenv("DATABASE_PASSWORD") 
        : "postgres";

    public ConexaoBD() {
        try {
            // Log das configura√ß√µes (sem mostrar senha)
            System.out.println("Adicionando um print pra ver se muda");
            System.out.println("üîó Conectando ao banco de dados:");
            System.out.println("   URL: " + DB_URL);
            System.out.println("   Usu√°rio: " + DB_USER);
            System.out.println("   Driver: " + DB_DRIVER);
            
            // Carrega Driver do Banco de Dados
            Class.forName(DB_DRIVER);

            if (DB_USER.length() != 0) {
                // Conex√£o COM usu√°rio e senha
                conexao = DriverManager.getConnection(DB_URL, DB_USER, DB_SENHA);
                System.out.println("‚úÖ Conex√£o com banco estabelecida com sucesso!");
            } else {
                // Conex√£o SEM usu√°rio e senha
                conexao = DriverManager.getConnection(DB_URL);
                System.out.println("‚úÖ Conex√£o com banco estabelecida (sem autentica√ß√£o)!");
            }

            // Testar a conex√£o
            if (conexao != null && !conexao.isClosed()) {
                System.out.println("üöÄ Banco de dados pronto para uso!");
            }

        } catch (ClassNotFoundException e) {
            System.err.println("‚ùå Driver PostgreSQL n√£o encontrado: " + e.getMessage());
            System.err.println("üí° Certifique-se de que o driver PostgreSQL est√° no classpath");
        } catch (SQLException e) {
            System.err.println("‚ùå Erro ao conectar com o banco de dados: " + e.getMessage());
            System.err.println("üí° Verifique se o PostgreSQL est√° rodando e as credenciais est√£o corretas");
            System.err.println("   URL: " + DB_URL);
            System.err.println("   Usu√°rio: " + DB_USER);
        } catch (Exception e) {
            System.err.println("‚ùå Erro inesperado: " + e.getMessage());
            e.printStackTrace();
        }
    }

    // Retorna inst√¢ncia (Singleton)
    public static ConexaoBD getInstance() {
        if (instancia == null) {
            instancia = new ConexaoBD();
        }
        return instancia;
    }

    // Retorna conex√£o
    public Connection getConnection() {
        try {
            // Verificar se a conex√£o ainda est√° v√°lida
            if (conexao == null || conexao.isClosed()) {
                System.out.println("üîÑ Reconectando ao banco de dados...");
                instancia = new ConexaoBD();
                return instancia.conexao;
            }
            return conexao;
        } catch (SQLException e) {
            System.err.println("‚ùå Erro ao verificar conex√£o: " + e.getMessage());
            throw new RuntimeException("Falha na conex√£o com banco de dados", e);
        }
    }

    // Efetua fechamento da conex√£o
    public void shutDown() {
        try {
            if (conexao != null && !conexao.isClosed()) {
                conexao.close();
                System.out.println("üîå Conex√£o com banco fechada");
            }
            instancia = null;
            conexao = null;
        } catch (SQLException e) {
            System.err.println("‚ùå Erro ao fechar conex√£o: " + e.getMessage());
        }
    }
    
    // M√©todo para testar conectividade
    public boolean testarConexao() {
        try {
            Connection conn = getConnection();
            if (conn != null && !conn.isClosed()) {
                // Executar uma query simples para testar
                Statement stmt = conn.createStatement();
                ResultSet rs = stmt.executeQuery("SELECT 1");
                boolean sucesso = rs.next();
                rs.close();
                stmt.close();
                return sucesso;
            }
            return false;
        } catch (SQLException e) {
            System.err.println("‚ùå Teste de conex√£o falhou: " + e.getMessage());
            return false;
        }
    }
}